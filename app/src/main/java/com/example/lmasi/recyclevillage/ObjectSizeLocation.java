package com.example.lmasi.recyclevillage;

import android.graphics.Point;

public interface ObjectSizeLocation {

    Point Location_Box = new Point(99, 660-85);
    int width_box = 1257;
    int height_box = 1238;

    Point Location_xBox = new Point(1260, 700-85);
    int width_xBox = 127;
    int height_xBox = 127;

    Point Location_buy = new Point(970+60, 1424-85);
    int width_buy = 259;
    int height_buy = 89;


    String[] name_item = {
            "그냥 원룸",
            "따뜻한 집",
            "편의점",
            "방범창 단 집",
            "자판기 카페",
            "우체통",
            "쓰레기통",
            "블루 체리나무",
            "핑크 체리나무",
            "시든 꽃",
            "꽃나무",
            "고양이 연두",
            "니코 자동차",
            "무인헬리콥터",
            "운빨우주비행선"
    };

    String[] info_item = {
            "그냥 원룸. 12개의 방이 있는 건물로 방이 하나 밖에 남지 않았다.",
            "굴뚝이 있는 집. 굴뚝은 거들뿐 보일러를 사용한다.",
            "편의점처럼 생겼지만 사실 파는 것은 라면 밖에 없다. 그래서 편리함.",
            "닭둘기가 매일 같이 부딛혀서 방범창을 단 집.",
            "외형은 카페이지만 안에는 자판기 밖에 없다. 자판기 안에 바리스타가 살고있다고...",
            "각종 고지서만 날아오는 우체통. 손편지 따위가 있을리 없다.",
            "지능과 감정을 지니고 있는 쓰레기통. 먹고싶은 것만 먹고 나머지는 뱉는다는...",
            "파랑색 페인트를 쏟은 나무.",
            "분홍색 페인트를 쏟은 나무.",
            "나무가 되고 싶었지만 각종 오염을 견디지 못해 그저 꽃.",
            "100년을 견뎌 꽃에서 나무가 된 꽃.",
            "집고양이지만 항상 거리에 나와있는 연두. 눈색깔이 연두라서 이름이 그렇다고 한다.",
            "'자부심'이라는 차보다 싸다.",
            "한국형 무인 헬리콥터. 우주를 여행할 수 있지만 사람은 타지못한다.",
            "무작위 확률로 목적지가 정해진다. 다른 은하로 간다면 새로운 삶을 살길..."
    };

    int[] price_item =
            {
                    500,
                    1000,
                    1500,
                    5000,
                    10000,
                    2000,
                    5000,
                    500,
                    500,
                    500,
                    3000,
                    5000,
                    8000,
                    15000,
                    30000
            };

    int[][] size_skill =
            {
                    {302, 75},
                    {302, 75},
                    {302, 75},
                    {302, 75},
                    {302, 75},
                    {367, 75},
                    {367, 75},
                    {367, 75},
                    {367, 75},
                    {367, 75},
                    {367, 75},
                    {367, 75},
                    {429, 75},
                    {429, 75},
                    {429, 75}

            };

    int[][] size_item =
            {
                    {277, 371},
                    {277, 371},
                    {277, 371},
                    {277, 371},
                    {409, 427},
                    {140, 169},
                    {140, 169},
                    {140, 266},
                    {140, 266},
                    {210, 162},
                    {140, 266},
                    {212, 161},
                    {278, 190},
                    {277, 271},
                    {277, 271}
            };

    int[][] size_item_locate =
            {
                    {277, 371},
                    {277, 371},
                    {277, 371},
                    {277, 371},
                    {409, 427},
                    {140, 169},
                    {140, 169},
                    {140, 266},
                    {140, 266},
                    {210, 162},
                    {140, 266},
                    {212, 161},
                    {278, 190},
                    {277, 271},
                    {277, 271}
            };


    String[] name_character = {
            "빅헤드",
            "백중원",
            "솔져:5959",
            "너루토",
            "버거햄",
            "감튀",
            "마싯닭",
            "펭구",
            ""
    };

    String[] info_character = {
            "대학 생활을 하던 어느날 잠에서 깼을 때\n주위엔 아무것도 없었고 얼굴이 너무 부은\n것 같아 만져보니 얼굴이 아니라 머리가\n부었더라고....",
            "오랫동안 혼자 살면서 요리를 몸으로 배운\n생활형 요리사. 모양은 별로지만 맛은\n일품이라고 한다.",
            "예비군이지만 아직 자신이 현역인줄알고\n군복을 입고 다닌다. 많이 불쌍한 사람이지만\n굉장히 힘이 세다고 한다.",
            "한때 정말 잘나가던 나뭇가지마을의\n닌자였지만 현재는 할일이 없어 빈집을 털고\n다닌다고 한다. 그래서 주머니가 크다고 한다.",
            "살면서 당신에게 최고의 버거는\n무엇이였습니까 제 대답은 바로 버거햄입니다.",
            "옛날 옛적 튀겨지는 형벌을 3일 밤낮으로\n받다가 결국 감자튀김이 되었다는\n전설의 죄인 맛이 기가막히다고 한다.",
            "한국의 전설의 동물이 해태에서 이 동물로\n바뀐지 꽤많은 시간이 흘렀다. 모든 사람들이 사랑하는 이 동물은 칰, 날개짓이 매우 빠르다.",
            "철수, 영희, 영구 그리고 펭구",
            ""
    };

    int[] price_character =
            {
                    0,
                    10000,
                    20000,
                    20000,
                    25000,
                    25000,
                    27000,
                    30000,
                    0
            };

    int[][] info_size_item =
            {
                    {161, 165},
                    {175, 165},
                    {175, 165},
                    {175, 165},
                    {215, 165},
                    {99, 165},
                    {123, 165},
                    {103, 165},
                    {103, 165},
                    {167, 165},
                    {131, 165},
                    {151, 165},
                    {241, 165},
                    {193, 165},
                    {181, 165}
            };

    double[][] point =
            {
                    {9.728 ,1252.837 },{13.73 ,1308.526 },{13.845 ,1362.474 },{22.51,1193.273 },
                    {66.834 ,1006.16 },{69.5 ,1061.778 },{69.5 ,1115.797 },{72.834 ,1171.665},{72.295 ,1225.338 },{76.749 ,1281.068 },{77.33,1335.637 },{80.865 ,1390.705 },{82.367 ,1444.059 },{84.983 ,1500.342 },{86.054 ,1553.873 },{89.917 ,1609.983 },{89.1 ,1663.977 },
                    {127.321 ,978.756 },{131.324 ,1034.445 },{131.438 ,1088.393 },{135.441 ,1144.082 },{135.441 ,1197.899 },{139.656 ,1253.676 },{139.694 ,1307.594 },{143.7 ,1363.281 },{143.716 ,1417.271 },{147.175 ,1472.731 },{147.908 ,1526.94 },{151.412 ,1582.419},{152.025 ,1636.576 },
                    {190.288 ,951.327 },{193.737 ,1006.83 },{194.122 ,1060.989 },{198.238 ,1116.629 },{198.238, 1170.626}, {202.656, 1226.244}, {202.356, 1280.262}, {206.773, 1335.881}, {207.987, 1389.241}, {210.589 ,1445.539 },{210.589 ,1499.536 },{214.707 ,1555.176 },{214.707 ,1609.173 },{216.987 ,1664.813 },
                    {250.55 ,925.085 },{254.075 ,981.268 },{254.075 ,1035.167 },{259.184 ,1091.203 },{261.486, 1143.183}, {265.449, 1198.889}, {265.603, 1252.819}, {269.485, 1308.492}, {269.72, 1362.456}, {273.602, 1418.129},{271.651 ,1473.073 },{275.905 ,1528.532 },{276.2 ,1582.522 },{280.083 ,1638.194 },
                    {318.557 ,952.95 },{318.373 ,1006.947 },{322.49 ,1062.586 },{324.128, 1115.797}, {328.361, 1171.431}, {328.546, 1225.412}, {332.478, 1281.068}, {332.478, 1335.065}, {336.595, 1390.705}, {336.595, 1444.702},{340.712 ,1499.505},{340.712  ,1554.34  },{344.829 ,1609.979 },
                    {383.065 ,924.735 },{383.03 ,978.748 },{387.123 ,1036.597 }, {387.295, 1088.32}, {391.32, 1144.016}, {391.265, 1198.021}, {394.952, 1253.576}, {395.53, 1307.593}, {399.535, 1363.281}, {399.5, 1417.294}, {403.848, 1473},{407.075 ,1582.563 },{407.019 ,1636.568 },
                    {445.345 ,897.333 },{445.318 ,951.331 },{449.136 ,1006.992 },{449.851, 1060.989}, {454.268, 1116.607}, {454.268, 1170.604}, {458.385, 1226.244}, {458.385, 1280.241}, {462.502, 1335.88}, {462.502, 1389.878}, {466.62, 1445.517}, {466.62, 1499.515},{469.723 ,1555.176 },{469.723 ,1609.418 },{473.839 ,1664.948 },
                    {508.246 ,923.901 },{512.128 ,979.591 },{513.077, 1033.538}, {517.021, 1089.253}, {517.195, 1143.174}, {521.138, 1198.889}, {521.312, 1252.811}, {525.195, 1308.501}, {525.429, 1362.447}, {529.313, 1418.137}, {529.546, 1482.084}, {533.43, 1527.774},{532.709 ,1581.825 },{536.833 ,1637.411 },
                    {571.168 ,896.502 },{575.185 ,952.162 },{575.9, 1006.159}, {580.016, 1061.798}, {580.016, 1115.796}, {584.134, 1171.435}, {584.134, 1225.432}, {588.252, 1281.072}, {588.252, 1335.069}, {592.369, 1390.709}, {592.369, 1444.706}, {596.486, 1500.346}, {596.486, 1554.343},{599.888 ,1609.982 },{599.786 ,1663.977 },
                    {638.051 ,924.74 },{637.997 ,978.751 }, {642.873, 1034.371}, {642.985, 1088.32}, {647.001, 1144.013}, {647.001, 1198.048}, {651.107, 1253.645}, {651.063, 1307.661}, {655.235, 1363.286}, {655.181, 1417.298}, {659.342, 1472.918}, {659.454, 1526.867},{662.755 ,1582.56 },{662.755 ,1636.547 },
                    {700.99 ,897.334 },{700.99 ,951.331 },{705.823, 1006.97}, {705.523, 1060.989}, {709.64, 1116.628}, {709.64, 1170.626}, {713.756, 1226.265},{714.057,1280.241},{718.218,1335.876},{717.874,1389.899},{721.991,1445.539 },{721.991 ,1499.536},{725.776 ,1555.081 },{724.884 ,1608.754 },{729.512 , 1664.813 },
                    {763.959 ,870.833 },{763.959 ,923.919 },{767.85 ,979.569 },{768.801, 1033.559}, {772.682, 1089.205}, {772.918, 1143.196}, {776.8, 1198.842}, {777.035, 1252.832},{780.916 ,1308.479 },{781.152 ,1362.47 },{785.033 ,1418.116 },{785.269 ,1472.107},{789.151 ,1527.753 }, {788.671 ,1581.743 },{792.554 ,1637.39 },
                    {826.941 ,842.505 },{826.941 ,896.502 },{830.856 ,952.162 },{831.57 ,1006.16 },{835.688, 1061.798}, {835.688, 1115.796}, {839.806, 1171.435}, {839.806, 1225.432}, {844.126, 1281.051},{843.922 ,1335.066 },{848.242 ,1390.688 },{848.039 ,1444.707 },{852.359 ,1500.326 },{852.156 ,1554.344 },{856.273 ,1609.982 },{856.372 ,1663.98 },

                    {894.527 ,924.735 },{894.527 ,978.77 },{898.752 ,1034.334 },{898.602, 1088.388}, {902.763, 1144.008}, {902.719, 1198.024}, {906.88, 1253.645}, {906.992, 1307.593}, {911.008, 1363.286}, {910.953, 1417.298}, {915.126, 1472.923},{915.007 ,1526.908 },{919.243 ,1582.56 },{919.186 ,1636.571 },
                    {957.513 ,897.329 },{957.521 ,951.331 },{961.294 ,1006.992 },{961.294 ,1060.989 },{965.756, 1116.606}, {965.413, 1170.626}, {969.83, 1226.244}, {969.53, 1280.262}, {973.991, 1335.879}, {973.947, 1389.878}, {978.108, 1445.516},{978.139 ,1499.44 },{981.881 ,1555.176 },{981.881 ,1609.173 },{985.999 ,1664.813 },
                    {1020.452 ,923.921 },{1024.333 ,979.571 },{1024.667 ,1033.515 },{1028.655 ,1089.21 }, {1028.687, 1143.194}, {1032.568, 1198.844}, {1032.804, 1252.831}, {1036.685, 1308.48}, {1036.921, 1362.468}, {1040.803, 1418.117},{1041.182 ,1471.989 },{1044.859 ,1527.729 },{1045.155 ,1581.741 },{1049.037 ,1637.391 },
                    {1083.42 ,896.502 },{1087.343 ,952.162 },{1087.343 ,1006.16 },{1091.578 ,1061.799 },{1091.459 ,1115.796 },{1095, 1171}, {1095.578, 1225.432}, {1099.695, 1281.072}, {1099.594, 1335.065},{1104.006 ,1390.688 },{1103.812 ,1444.707 },{1108.05 ,1500.346 },{1107.929 ,1554.344 },
                    {1150.404 ,978.684 },{1154.345 ,1034.345 },{1155.415 ,1087.932 },{1158.625 ,1143.966 },{1158.625 ,1198.124 },{1162.743 ,1253.602 },{1162.743 ,1307.503 },{1166.862 ,1363.238 },{1166.862 ,1417.399 },{1170.879 ,1472.918 },{1170.789 ,1526.955 },
                    {1280.33 ,1033.563 },{1283.715 ,1089.384 },{1285.167 ,1142.75 },{1288 ,1198.699 },{1288.564 ,1252.836 },{1292.565 ,1308.526 },{1292.681, 1362.473 },{1296.524 ,1418.096 },{1296.524 ,1472.229 },{1300.8 ,1527.8 },{1300.915 ,1581.747 },{1304.758 ,1637.369 },
            };

    Point[] ITEM_ALLOCATED_SIZE =
            {
                    // left 기준

                    new Point(2, 2),
                    new Point(2, 2),
                    new Point(2, 2),
                    new Point(2, 2),
                    new Point(3, 3),
                    new Point(1, 1),
                    new Point(1, 1),
                    new Point(1, 1),
                    new Point(1, 1),
                    new Point(1, 2),
                    new Point(1, 1),
                    new Point(1, 2),
                    new Point(1, 3),
                    new Point(0, 0),
                    new Point(0, 0)
            };

    int[] Item_skill_size =
            {
                    302, 302, 302, 302, 302, 367, 367, 367, 367, 367, 367, 367, 429, 429, 429
            };


    Point[][] GRID_POINT =
            {
                    {new Point(-1,-1), new Point(-1,-1), new Point(-1,-1), new Point(-1,-1), new Point(-1,-1), new Point(-1,-1), new Point(-1,-1), new Point(-1,-1), new Point(-1,-1), new Point(-1,-1), new Point(-1,-1), new Point(-1,-1), new Point(-1,-1), new Point(-1,-1), new Point(-1,-1), new Point(-1,-1), new Point(-1,-1), new Point(-1,-1), new Point(-1,-1), new Point(-1,-1), new Point(-1,-1), new Point(-1,-1), new Point(-1,-1) },
                    {new Point(-1,-1), new Point(-1,-1), new Point(-1,-1), new Point(-1,-1), new Point(-1,-1), new Point(-1,-1), new Point(-1, -1), new Point(-1, -1), new Point(-1, -1), new Point(22,1193), new Point(72 ,1171), new Point(135 ,1144), new Point(198,1116), new Point(259,1091), new Point(322 ,1062), new Point(387,1036), new Point(449 ,1006), new Point(512,979), new Point(575 ,952), new Point(638 ,924), new Point(700 ,897), new Point(774 ,865), new Point(-1,-1)},
                    {new Point(-1,-1), new Point(-1,-1), new Point(-1,-1), new Point(-1,-1), new Point(-1,-1), new Point(-1,-1), new Point(-1, -1), new Point(11, 1251), new Point(9 ,1252), new Point(72 ,1225), new Point(135, 1197), new Point(198, 1170), new Point(261, 1143), new Point(324, 1115), new Point(387, 1088), new Point(449, 1060), new Point(513, 1033), new Point(575, 1006), new Point(637 ,978), new Point(700 ,951), new Point(763,923), new Point(826 ,896), new Point(-1,-1)},
                    {new Point(-1,-1), new Point(-1,-1), new Point(-1,-1), new Point(-1,-1), new Point(-1,-1), new Point(-1,-1), new Point(-1, -1), new Point(13, 1308), new Point(76,1281), new Point(139 , 1253), new Point(202, 1226), new Point(265, 1198), new Point(328, 1171), new Point(391, 1144), new Point(454, 1116), new Point(517, 1089), new Point(580, 1061), new Point(642, 1034), new Point(705, 1006), new Point(768, 979), new Point(831, 952), new Point(894 ,924), new Point(-1,-1)},
                    {new Point(-1,-1), new Point(-1,-1), new Point(-1,-1), new Point(-1,-1), new Point(-1,-1), new Point(-1,-1), new Point(13, 1362), new Point(75, 1335), new Point(139, 1307), new Point(202, 1280), new Point(265, 1252), new Point(328, 1225), new Point(391, 1198), new Point(454, 1170), new Point(517, 1143), new Point(580, 1115), new Point(642, 1088), new Point(705, 1060), new Point(768, 1033), new Point(830, 1006), new Point(894, 978), new Point(956 ,951), new Point(-1,-1)},
                    {new Point(-1,-1), new Point(-1,-1), new Point(-1,-1), new Point(-1,-1), new Point(-1,-1), new Point(23,1420), new Point(80, 1390), new Point(143, 1363), new Point(206, 1335), new Point(269, 1308), new Point(332, 1281), new Point(394, 1253), new Point(458, 1226), new Point(521, 1198), new Point(584, 1171), new Point(647, 1144), new Point(709, 1116), new Point(772, 1089), new Point(835, 1061), new Point(896, 1032), new Point(961, 1006), new Point(1023,979 ), new Point(-1,-1)},
                    {new Point(-1,-1), new Point(-1,-1), new Point(-1,-1), new Point(-1,-1), new Point(24,1421), new Point(79,1444), new Point(143, 1416), new Point(207, 1389), new Point(269, 1362), new Point(332, 1335), new Point(395, 1307), new Point(458, 1280), new Point(521, 1252), new Point(584, 1225), new Point(647, 1198), new Point(709, 1170), new Point(772, 1143), new Point(835, 1115), new Point(898, 1088), new Point(960, 1060), new Point(1024, 1033), new Point(1086 ,1006), new Point(-1,-1)},
                    {new Point(-1,-1), new Point(-1,-1), new Point(-1,-1), new Point(22,1527), new Point(84,1500), new Point(147,1473), new Point(210, 1445), new Point(273, 1418), new Point(336, 1390), new Point(399, 1363), new Point(462, 1335), new Point(525, 1308), new Point(588, 1281), new Point(651, 1253), new Point(713, 1226), new Point(776, 1198), new Point(839, 1171), new Point(902, 1144), new Point(965, 1116), new Point(1027, 1089), new Point(1091, 1061), new Point(1153 ,1034), new Point(-1,-1)},
                    {new Point(-1,-1), new Point(-1,-1), new Point(24,1581), new Point(84,1554), new Point(147,1526), new Point(209,1499), new Point(273, 1471), new Point(336, 1444), new Point(399, 1417), new Point(462, 1389), new Point(525, 1362), new Point(588, 1335), new Point(651, 1307), new Point(713, 1280), new Point(777, 1252), new Point(839, 1225), new Point(902, 1198), new Point(965, 1170), new Point(1028, 1143), new Point(1090, 1115), new Point(1154, 1087), new Point(1215 ,1060), new Point(-1,-1)},
                    {new Point(-1,-1), new Point(26,1637), new Point(89,1609), new Point(151,1582), new Point(214,1555), new Point(277,1527), new Point(339, 1500), new Point(403, 1473), new Point(466, 1445), new Point(529, 1418), new Point(592, 1390), new Point(655, 1363), new Point(718, 1335), new Point(780, 1308), new Point(844,1281), new Point(906, 1253), new Point(969, 1226), new Point(1032, 1198), new Point(1095, 1171), new Point(1157, 1143), new Point(1221, 1116), new Point(1283 ,1089), new Point(-1,-1)},
                    {new Point(-1,-1), new Point(89,1665), new Point(154,1636), new Point(214,1609), new Point(277,1581), new Point(339,1554), new Point(400, 1526), new Point(466, 1499), new Point(529, 1482), new Point(592, 1444), new Point(655, 1417), new Point(717, 1389), new Point(781, 1362), new Point(843, 1335), new Point(906, 1307), new Point(969, 1280), new Point(1032, 1252), new Point(1095, 1225), new Point(1158, 1197), new Point(1220, 1170), new Point(1283, 1142), new Point(1347 ,1115), new Point(-1,-1)},
                    {new Point(-1,-1), new Point(155,1692), new Point(220,1664), new Point(282,1637), new Point(344,1609), new Point(407,1582), new Point(469, 1555), new Point(533, 1527), new Point(596, 1500), new Point(659, 1472), new Point(721, 1445), new Point(785, 1418), new Point(848, 1390), new Point(911, 1363), new Point(973, 1335), new Point(1036, 1308), new Point(1099, 1281), new Point(1162, 1253), new Point(1225, 1226), new Point(1287, 1198), new Point(1351, 1171), new Point(1413 ,1144), new Point(-1,-1)},
                    {new Point(-1,-1), new Point(222,1718), new Point(284,1691), new Point(345,1663), new Point(408,1635), new Point(469,1609), new Point(530, 1581), new Point(596, 1554), new Point(659, 1526), new Point(721, 1499), new Point(785, 1472), new Point(848,1444), new Point(910, 1417), new Point(973, 1389), new Point(1036, 1362), new Point(1099, 1335), new Point(1161, 1307), new Point(1224, 1280), new Point(1288, 1252), new Point(1350, 1225), new Point(1413, 1197), new Point(-1, -1), new Point(-1,-1)},
                    {new Point(-1,-1), new Point(286,1747), new Point(350,1719), new Point(412,1692), new Point(474,1664), new Point(537,1637), new Point(600, 1609), new Point(662, 1582), new Point(726, 1555), new Point(789, 1527), new Point(852, 1500), new Point(915, 1472), new Point(978, 1445), new Point(1040, 1418), new Point(1102, 1390), new Point(1165, 1363), new Point(1228, 1335), new Point(1291, 1308), new Point(1355, 1281), new Point(1417, 1253), new Point(-1, -1), new Point(-1, -1), new Point(-1,-1)},
                    {new Point(-1,-1), new Point(350,1775), new Point(413,1746), new Point(477,1718), new Point(539,1690), new Point(599,1663), new Point(664, 1635), new Point(725, 1609), new Point(788, 1581), new Point(851, 1554), new Point(915, 1526), new Point(976, 1499), new Point(1040, 1471), new Point(1102, 1444), new Point(1166, 1417), new Point(1228, 1389), new Point(1291, 1362), new Point(1354, 1335), new Point(1417, 1307), new Point(-1, -1), new Point(-1, -1), new Point(-1, -1), new Point(-1,-1)},
                    {new Point(-1,-1), new Point(-1,-1), new Point(478,1775), new Point(541,1747), new Point(604,1718), new Point(670,1694), new Point(730, 1664), new Point(792, 1637), new Point(855, 1609), new Point(918, 1582), new Point(981, 1555), new Point(1044, 1527), new Point(1107, 1500), new Point(1170, 1473), new Point(1233, 1445), new Point(1296, 1420 ), new Point(1359, 1391), new Point(1420, 1363), new Point(-1, -1), new Point(-1, -1), new Point(-1, -1), new Point(-1, -1), new Point(-1,-1)},
                    {new Point(-1,-1), new Point(-1,-1), new Point(-1,-1), new Point(-1,-1), new Point(-1,-1), new Point(-1,-1), new Point(-1,-1), new Point(-1,-1), new Point(-1,-1), new Point(-1,-1), new Point(-1,-1), new Point(-1,-1), new Point(-1,-1), new Point(-1,-1), new Point(-1,-1), new Point(-1,-1), new Point(-1,-1), new Point(-1,-1), new Point(-1,-1), new Point(-1,-1), new Point(-1,-1), new Point(-1,-1), new Point(-1,-1)}
            };
/*
    Point[][] GRID_AIR_POINT =
            {

                    { new Point(413,799), new Point(477,772)},
                    { new Point(480,827), new Point(543,800)},
                    { new Point(925,799), new Point(988,771)},
                    {new Point(992,827), new Point(1055,800)}
            };
*/
Point[][] GRID_AIR_POINT =
        {

                { new Point(413,799)},
                { new Point(925,799)}
        };
    int re_x = -3;
    int re_y = 385;
    // 662.334  1310.999
    // 655        1417
    //0~22  [23]


    Point[] pivot_position_left =
            {
                    new Point(150,315),
                    new Point(150,265),
                    new Point(138,265),
                    new Point(150,260),
                    new Point(210,315),
                    new Point(80,175),
                    new Point(82,175),
                    new Point(80,218),
                    new Point(80,218),
                    new Point(140,193),
                    new Point(80,215),
                    new Point(145,164),
                    new Point(148,164),
                    new Point(180,150),
                    new Point(141,150)
            };

    Point[] pivot_position_right =
            {
                    new Point(150,315),
                    new Point(150,265),
                    new Point(138,265),
                    new Point(150,260),
                    new Point(210,315),
                    new Point(80,175),
                    new Point(82,175),
                    new Point(80,218),
                    new Point(80,218),
                    new Point(160,220),
                    new Point(80,215),
                    new Point(160,195),
                    new Point(148,164),
                    new Point(180,150),
                    new Point(141,150)
            };

    enum C_STATE {NONE, BUY, MAIN, LOCK}

    int[][] star_locate =
            {
                    {714, 211},
                    {1002, 336},
                    {1213, 324},
                    {233, 544},
                    {647, 570},
                    {946, 544},
                    {1306, 561},
                    {114, 926},
                    {1371, 1027},
                    {137, 1465},
                    {1399, 1497},
                    {239, 1747},
                    {1209, 1652},
                    {86, 1949},
                    {1238, 2082}
            };

}